==================
Expressions
==================
value := add(40, 2) + other.catch
ptr := value.^*i64
negated := -value
chained := math.print("hi").^*void
---
(source_file
  (var_declaration
    pattern: (identifier)
    value: (binary_expression
      left: (call_expression
        function: (primary_expression (identifier))
        arguments: (argument_list
          (primary_expression (literal (integer_literal)))
          (primary_expression (literal (integer_literal)))))
      right: (member_expression
        object: (primary_expression (identifier))
        property: (identifier))))
  (var_declaration
    pattern: (identifier)
    value: (cast_expression
      value: (primary_expression (identifier))
      type: (pointer_type (type_identifier (identifier)))))
  (var_declaration
    pattern: (identifier)
    value: (unary_expression
      argument: (primary_expression (identifier))))
  (var_declaration
    pattern: (identifier)
    value: (cast_expression
      value: (call_expression
        function: (member_expression
          object: (primary_expression (identifier))
          property: (identifier))
        arguments: (argument_list
          (primary_expression (literal (string_literal)))) )
      type: (pointer_type (type_identifier (identifier)))))))
