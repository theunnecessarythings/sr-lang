// Simple path utilities for POSIX-style paths

rt_strlen :: extern proc(*u8) usize
rt_ptr_add :: extern proc(*u8, usize) *u8

sep :: u8 = '/'

// Join a and b into buffer with a single separator. Returns length written (excludes NUL).
join_into :: proc(buf: *u8, cap: usize, a: string, b: string) usize {
    alen := rt_strlen(a.^*u8)
    blen := rt_strlen(b.^*u8)
    i: usize = 0
    // copy a
    while (i < alen and i < cap) { buf[i] = a.^*u8[i]; i = i + 1 }
    // add separator if needed
    if (i < cap) {
        need_sep := (i == 0 or buf[i-1] != sep) and (blen > 0 and b.^*u8[0] != sep)
        if (need_sep) { buf[i] = sep; i = i + 1 }
    }
    // copy b
    j: usize = 0
    while (j < blen and i < cap) { buf[i] = b.^*u8[j]; i = i + 1; j = j + 1 }
    return i
}

is_abs :: proc(p: string) bool { return rt_strlen(p.^*u8) > 0 and p.^*u8[0] == sep }

