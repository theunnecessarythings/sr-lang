package mem

// Memory operations: wrappers over runtime functions

rt_memcpy  :: extern proc(*u8, *u8, usize) void
rt_memmove :: extern proc(*u8, *u8, usize) void
rt_memset  :: extern proc(*u8, u8, usize) void

// Copy memory from src to dst
copy :: proc(dst: *void, src: *void, len: usize) void {
    rt_memcpy(dst.^*u8, src.^*u8, len)
}

// Move memory (safe for overlap)
move :: proc(dst: *void, src: *void, len: usize) void {
    rt_memmove(dst.^*u8, src.^*u8, len)
}

// Set memory to byte value
set :: proc(dst: *void, value: u8, len: usize) void {
    rt_memset(dst.^*u8, value, len)
}

