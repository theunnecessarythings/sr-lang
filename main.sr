package main

rl :: import "vendor/raylib"
sdf :: import "sdf"
math :: import "std/math"

main :: proc() i32 {
  screen_width :: 800
  screen_height :: 450

  rl.InitWindow(screen_width, screen_height, "anim-sr")
  defer rl.CloseWindow()

  rl.SetTargetFPS(60)

  sdf_ctx :: sdf.SDF.init()

  while !rl.WindowShouldClose() {
    rl.BeginDrawing()
    defer rl.EndDrawing()

    rl.ClearBackground(rl.WHITE)

    sdf_ctx.begin()
    
    time :: rl.GetTime().(f32)
    pulsating_radius :: 100.0 + math.sin(time * 2.0) * 20.0

    bc := sdf_ctx.build_circle()
    bc.center(400, 225).radius(pulsating_radius).draw()
    br := sdf_ctx.build_rect()
    br.center(200, 150).size(100, 50).draw()
    
    sdf_ctx.end()

    rl.DrawText("SDF Shapes", 10, 10, 20, rl.BLACK)
  }

  return 0
}
