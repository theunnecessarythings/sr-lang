asm { mov rax, rbx }       // raw_asm_block, then EOS by NLSEMI
asm{a}                     // no space
"hi\n\"ok\""               // string with escapes
r"no escapes \n "         // raw string
r#"hash " inside"#        // hashed raw
br"bytes"                  // byte raw string
'c' b'Z'                   // char + byte char
0 1 12_345                 // ints
0xFF 0o755 0b1011_0011     // bases
1. .5 1.0 1e9 1.f32        // floats and suffix
1..2 1...2                 // range/tok splitting
x.1 x..1                   // tuple index vs range
a.b(c)[i].d.*.?^ % .(T)    // postfix chain
// comment
/* nested /* block */ ok */
foo // trailing comment EOF
return
continue
await x
?  // nlsemi after '?'
(1)
[2]
{3}
{ a: 1, b }                // brace literal-ish
const
